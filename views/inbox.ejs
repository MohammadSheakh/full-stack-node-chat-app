<!-- <%- include('./partials/header.ejs'); %>
  <div id="chat-container">
    <div id="search-container">
      <input type="text" placeholder="Search" />
    </div>
    <div id="conversation-list">
      <div class="conversation active">
        <img src="./images/user1.png" alt="Sumit" />
        <div class="title-text">Sumit Saha</div>
        <di class="created-date"> Apr 16 </di>
        <div class="conversation-message">This is a message</div>
      </div>
      <div class="conversation">
        <img src="./images/user2.png" alt="Sumit" />
        <div class="title-text">Sumit Saha</div>
        <di class="created-date"> Apr 16 </di>
        <div class="conversation-message">This is a message</div>
      </div>
    </div>
    <div id="new-message-container">
      <a href="#">+</a>
    </div>
    <div id="chat-title">
      <span>Sumit</span>
      <img src="./images/trash.png" alt="Delete Conversation" />
    </div>
    <div id="chat-message-list">
      <div class="message-row other-message">
        <div class="message-content">
          <img src="./images/user1.png" alt="Sumit" />
          <div class="message-text">Ok then</div>
          <div class="message-time">Apr 16</div>
        </div>
      </div>
      <div class="message-row you-message">
        <div class="message-content">
          <div class="message-text">Lorem ipsum dolor sit amet</div>
          <div class="message-time">Apr 16</div>
        </div>
      </div>
    </div>
    <div id="chat-form">
      <img src="./images/attachment.png" alt=Add Attachment"" />
      <input type="text" placeholder="Type a message" />
    </div>
  </div>

  <%- include('./partials/add-conversation-modal.ejs'); %>
    </body>

    </html> -->


<!-- ------------------------------------------------------------------------------------------------------------------ -->

<%- include('./partials/header.ejs'); %>
  <div id="chat-container">
    <div id="search-container">
      <input type="text" placeholder="Search" />
    </div>
    <div id="conversation-list">
      <!-- ðŸ”µðŸ”´
      jei data gula inboxController er getInbox er moddhe res.locals.data = conversations; theke ashse shegular upor
      loop kortesi -->

      <!-- data.forEach kore ek ekta conversation print korechi  -->


      <% data.forEach(function(conversation) { %>
        <!-- conversation creator is same to logged in user, so we need to show participant name and avatar -->
        <% if(conversation.creator.id==loggedInUser.userid) { %>
          <div class="conversation"
            onclick="getMessages('<%= conversation._id %>', '<%= conversation.participant.name %>')">

            <!-- ekhane just if else dia check kora hoyeche .. jodi avatar thake .. tahole dekhao .. ar avatar na thakle 
      onno ekta URL .. shejonno eto if else deowa legeche   so conversation load korar bepar ta hoye gelo .. 
              ekhon amra jokhon ekta conversation e click korbo .. 
    -->


            <% if (conversation.participant.avatar) { %>
              <img src="./uploads/avatars/<%= conversation.participant.avatar %>"
                alt="<%= conversation.participant.name %>" />
              <% } else { %>
                <img src="./images/nophoto.png" />
                <% } %>
                  <div class="title-text">
                    <%= conversation.participant.name %>
                  </div>
                  <div class="conversation-date">
                    <%= moment(conversation.last_updated).fromNow() %>
                  </div>
          </div>
          <% } else { %>
            <div class="conversation"
              onclick="getMessages('<%= conversation._id %>', '<%= conversation.creator.name %>')">
              <% if (conversation.creator.avatar) { %>
                <img src="./uploads/avatars/<%= conversation.creator.avatar %>"
                  alt="<%= conversation.creator.name %>" />
                <% } else { %>
                  <img src="./images/nophoto.png" />
                  <% } %>
                    <div class="title-text">
                      <%= conversation.creator.name %>
                    </div>
                    <div class="conversation-date">
                      <%= moment(conversation.last_updated).fromNow() %>
                    </div>
            </div>
            <% } %>
              <% }); %>

                <!-- show no conversation placeholder image for 0 conversations -->
                <% if(data && data.length===0) { %>
                  <div class="nothing"><img src="./images/no-conversation.svg"></div>
                  <% } %>
    </div>

    <div class="new-message-container" onclick="openModal()">
      <a href="#">+</a>
    </div>

    <div id="chat-title">
      <span id="conversation-partner"></span>
      <img src="./images/trash.png" alt="Delete Conversation" />
    </div>

    <!-- placeholder div if no messages are in messages area -->
    <div id="chat-message-list">
      <div class="nothing">select a conversation</div>
    </div>

    <!-- send message form -->
    <form id="chat-form" method="post" enctype="multipart/form-data">
      <label for="attachment"><img src="./images/attachment.png" alt="Add Attachment" /></label>
      <input type="file" multiple name="attachment" class="hide" id="attachment" />
      <input type="text" name="message" placeholder="Type a message" autocomplete="off" />
    </form>

  </div>
  <%- include('./partials/add-conversation-modal.ejs'); %>

    <!-- socket.io er client version js cdn ta include korechi .. eta documentation e paowa jabe ..
    sheita jei ami enechi .. shathe shathe she amake jeta koreche .. she amake globally io() nam e ekta function
    diye dey .. globally available .. client side e kintu eita -->

    <!-- import socket io client from cdn -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.min.js"></script>

    <script>
      const form = document.querySelector('#chat-form');
      const messageContainer = document.querySelector('#chat-message-list');
      const chatTitleContainer = document.querySelector('#conversation-partner');
      const loggedinUserId = '<%= loggedInUser.userid %>';
      const loggedinUserName = '<%= loggedInUser.username %>';
      let participant = null; // selected conversation participant object
      let current_conversation_id; // selected conversation id

      // ðŸ”´ðŸ”´ðŸ”µðŸ”µ socket initialization

      const socket = io('<%= process.env.APP_URL %>'); // io function er moddhe ami ekta URL pass kore diyechi .. 
      // ekhane amake bolte hoy .. amar server URL ta ki .. 

      // handle new/live incoming message from socket
      socket.on("new_message", data => {
        // text dibo .. ar ekta callback function .. 
        // er mane hocche she new_message nam e ekta event er jonno boshe ache .. jokhon amar ei event ta fire hoy
        // tokhon ei data namok callback function ta call hoy ..  so , eta to amar client .. so , amake server end
        // theke somehow new_message namok event ta client er kache pathay dite hobe .. thats it .. 
        // tar mane server eo amake socket er ekta version install korte hobe .. shejonno package.json e 
        // npm install socket.io .. simple ei package ta install korechi .. 
        // tarpor sheta ke initialize jevabe client e korechi .. temon vabe server mane app.js eo korechi .. 

        // only respond if current conversation is open in any client
        if (data.message.conversation_id == current_conversation_id) {
          // message class
          const messageClass = data.message.sender.id === loggedinUserId ? 'you-message' : 'other-message';

          const senderAvatar = data.message.sender.avatar ? `<img src="./uploads/avatars/${data.message.sender.avatar}" alt="${data.message.sender.name}" />` : `<img src="./images/nophoto.png" alt="${data.message.sender.name}" />`;
          // message attachments
          let attachments = '<div class="attachments">';
          if (data.message.attachment && data.message.attachment.length > 0) {
            data.message.attachment.forEach(attachment => {
              attachments += `<img src="./uploads/attachments/${attachment}" /> `;
            });
          }
          attachments += '</div>';
          let messageHTML;
          // do not show avatar for loggedin user
          if (data.message.sender.id == loggedinUserId) {
            messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
              <div class="message-text">${data.message.message}</div>
              ${attachments}
              <div class="message-time">${moment(data.message.date_time).fromNow()}</div>
            </div></div>`;
          } else {
            messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
              ${senderAvatar}
              <div class="message-text">${data.message.message}</div>
              ${attachments}
              <div class="message-time">${moment(data.message.date_time).fromNow()}</div>
            </div></div>`;
          }
          // append the inoming message to message area as last item
          document.querySelector('#chat-message-list > .message-row:first-child').insertAdjacentHTML('beforeBegin', messageHTML);
        }
      });

      // ðŸ”´ðŸ”µ get messages of a conversation
      async function getMessages(conversation_id, current_conversation_name) {
        // messages failure toast
        const messagesFailureToast = Toastify({
          text: "Error loading messages!",
          duration: 1000,
        });


        /////////////////////////////////////////////////////////////////////////////////////////////////////////

        let response = await fetch(`/inbox/messages/${conversation_id}`); // ei route e hit kore ... 
        // response pailam .. 
        const result = await response.json();

        if (!result.errors && result.data) {
          // jodi kono error na hoy 
          form.style.visibility = 'visible'; // text lekhar form ta visible holo

          const { data, user, conversation_id } = result;
          participant = data.participant;
          current_conversation_id = conversation_id; // jar shathe conversation korbo .. take select kore rakhlam

          if (data.messages) {
            // jodi messages thake .. simply loop kore kore messages gula dekhate hobe 
            // template ta banate hobe 
            let allMessages = '';
            if (data.messages.length > 0) {
              data.messages.forEach((message) => {
                let senderAvatar = message.sender.avatar ? `./uploads/avatars/${message.sender.avatar}` : './images/nophoto.png';
                const messageClass = message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
                const showAvatar = message.sender.id === loggedinUserId ? '' : `<img src="${senderAvatar}" alt="${message.sender.name}" />`;
                // message attachments
                let attachments = '<div class="attachments">';
                if (message.attachment && message.attachment.length > 0) {
                  message.attachment.forEach(attachment => {
                    attachments += `<img src="./uploads/attachments/${attachment}" /> `;
                  });
                }
                attachments += '</div>';
                // final message html
                let messageHTML = `<div class="message-row ${messageClass}"><div class="message-content">
                      ${showAvatar}
                      <div class="message-text">${message.text}</div>
                      ${attachments}
                      <div class="message-time">${moment(message.date_time).fromNow()}</div>
                    </div></div>`;
                allMessages += messageHTML;
                messageContainer.innerHTML = allMessages;
              });
            } else if (data.messages.length === 0) {
              messageContainer.innerHTML = '<div class="message-row"></div>';
            }
            chatTitleContainer.textContent = current_conversation_name;
          }
        } else {
          messagesFailureToast.showToast();
        }
      }
      // message sending
      form.onsubmit = async function (event) {
        event.preventDefault();
        const sendMessageFailureToast = Toastify({
          text: "Error sending message",
          duration: 1000,
        });


        /////////////////////////////////////////////////////////////////////////////////////////////////////////


        // prepare the form data
        const formData = new FormData(form);
        formData.append('receiverId', participant.id);
        formData.append('receiverName', participant.name);
        formData.append('avatar', participant.avatar || '');
        formData.append('conversationId', current_conversation_id);

        // send the request to server
        let response = await fetch("/inbox/message", {
          method: "POST",
          body: formData,
        });

        // get response
        let result = await response.json();
        if (!result.errors) {
          form.reset(); // reset the form
        } else {
          sendMessageFailureToast.showToast();
        }
      }

    </script>
    </body>

    </html>